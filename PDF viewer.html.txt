<!DOCTYPE html>
<html lang="zh">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>我的 PDF Viewer</title>
  <style>
    :root { --bg:#f9f9f9; --bd:#e5e5e5; --text:#222; --accent:#0d6efd; }
    body { margin:0; font-family:system-ui,-apple-system,"Segoe UI",Arial; color:var(--text); background:#fff; }
    .wrap { max-width:1100px; margin:0 auto; padding:16px; }
    .toolbar {
      display:flex; align-items:center; gap:10px; flex-wrap:wrap;
      padding:10px; background:var(--bg); border:1px solid var(--bd); border-radius:10px;
      position:sticky; top:0; z-index:5;
    }
    .toolbar button, .toolbar input, .toolbar a {
      height:34px; padding:0 10px; border:1px solid var(--bd); border-radius:8px; background:#fff;
      font-size:14px; line-height:32px; cursor:pointer; text-decoration:none; color:inherit;
    }
    .toolbar button:hover, .toolbar a:hover { background:#f1f1f1; }
    .toolbar .primary { background:var(--accent); color:#fff; border-color:var(--accent); }
    .toolbar .primary:hover { filter:brightness(0.95); }
    .toolbar .sep { width:1px; height:24px; background:var(--bd); margin:0 4px; }
    .pager { display:flex; align-items:center; gap:6px; }
    .pager input { width:64px; text-align:center; }
    .canvas-shell { margin-top:12px; border:1px solid var(--bd); border-radius:10px; overflow:auto; background:#fff; }
    canvas { display:block; margin:0 auto; background:#fff; }
  </style>
</head>
<body>
  <div class="wrap">
    <div class="toolbar">
      <div class="pager">
        <button id="prevBtn" title="上一頁">◀</button>
        <input id="pageInput" type="number" min="1" value="1" />
        <span id="pageCount">/ 1</span>
        <button id="nextBtn" title="下一頁">▶</button>
      </div>

      <span class="sep"></span>

      <button id="zoomOutBtn" title="縮小">－</button>
      <button id="zoomInBtn" title="放大">＋</button>
      <button id="resetZoomBtn" title="100%">100%</button>

      <a id="downloadBtn" class="primary" target="_blank" rel="noopener">⬇ 下載</a>
    </div>

    <div class="canvas-shell">
      <canvas id="pdfCanvas"></canvas>
    </div>
  </div>

  <!-- PDF.js -->
  <script src="https://cdn.jsdelivr.net/npm/pdfjs-dist@3.11.174/build/pdf.min.js"></script>
  <script>
    // 設定 PDF 檔案網址 (改成你 GitHub Pages 上的 PDF)
    const PDF_URL = "https://chuchu1016.github.io/Chu-pdf/CHU%20resume.pdf";

    pdfjsLib.GlobalWorkerOptions.workerSrc =
      "https://cdn.jsdelivr.net/npm/pdfjs-dist@3.11.174/build/pdf.worker.min.js";

    const canvas = document.getElementById("pdfCanvas");
    const ctx = canvas.getContext("2d");
    const pageInput = document.getElementById("pageInput");
    const pageCountSpan = document.getElementById("pageCount");
    const prevBtn = document.getElementById("prevBtn");
    const nextBtn = document.getElementById("nextBtn");
    const zoomInBtn = document.getElementById("zoomInBtn");
    const zoomOutBtn = document.getElementById("zoomOutBtn");
    const resetZoomBtn = document.getElementById("resetZoomBtn");
    const downloadBtn = document.getElementById("downloadBtn");

    let pdfDoc = null;
    let currentPage = 1;
    let scale = 1.0;

    downloadBtn.href = PDF_URL;

    pdfjsLib.getDocument(PDF_URL).promise.then(doc => {
      pdfDoc = doc;
      pageCountSpan.textContent = `/ ${pdfDoc.numPages}`;
      pageInput.max = pdfDoc.numPages;
      renderPage(currentPage);
    });

    function renderPage(num) {
      pdfDoc.getPage(num).then(page => {
        const viewport = page.getViewport({ scale });
        canvas.width = viewport.width;
        canvas.height = viewport.height;
        page.render({ canvasContext: ctx, viewport });
        pageInput.value = String(num);
        updateNavButtons();
      });
    }

    function updateNavButtons() {
      prevBtn.disabled = currentPage <= 1;
      nextBtn.disabled = currentPage >= pdfDoc.numPages;
    }

    prevBtn.addEventListener("click", () => {
      if (currentPage > 1) { currentPage--; renderPage(currentPage); }
    });
    nextBtn.addEventListener("click", () => {
      if (currentPage < pdfDoc.numPages) { currentPage++; renderPage(currentPage); }
    });
    pageInput.addEventListener("change", () => {
      let val = parseInt(pageInput.value, 10);
      if (isNaN(val)) val = currentPage;
      val = Math.min(Math.max(1, val), pdfDoc.numPages);
      currentPage = val;
      renderPage(currentPage);
    });
    zoomInBtn.addEventListener("click", () => { scale = Math.min(scale + 0.1, 5); renderPage(currentPage); });
    zoomOutBtn.addEventListener("click", () => { scale = Math.max(scale - 0.1, 0.2); renderPage(currentPage); });
    resetZoomBtn.addEventListener("click", () => { scale = 1.0; renderPage(currentPage); });
  </script>
</body>
</html>
